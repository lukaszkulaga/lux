<?php

namespace App\Repository;


use App\Entity\DaneUzytkownikaEntity;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\ORM\EntityManagerInterface;
use Doctrine\Persistence\ManagerRegistry;

/**
 * administratorRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdministratorRepository extends ServiceEntityRepository
{

    public function  __construct(ManagerRegistry $managerRegistry)
    {
        parent::__construct($managerRegistry, DaneUzytkownikaEntity::class);
    }


    public function pobierzDaneUzytkownikaRepo() {

        $daneUzytkownika = $this->findAll();

        return $daneUzytkownika;
    }
//$this->getEntityManager()->getConnection()->fetchAllAssociative($sql);

    public function statusKontaRepo($statusKontaTab) {

        $idUzytkownika=$statusKontaTab['idUzytkownika'];
        $statusKonta=$statusKontaTab['statusKonta'];

        $statusKontaTab = $this->findOneBy(array('idUzytkownika'=>$idUzytkownika));
        $statusKontaTab->setStatusKonta($statusKonta);

        $this->getEntityManager()->persist($statusKontaTab);
        $this->getEntityManager()->flush();

        $sql = 'select * from daneUzytkownika';

        $statusKontaTab =  $this->getEntityManager()->getConnection()->fetchAllAssociative($sql);

        return $statusKontaTab;
    }

    public function rolaRepo($rolaTab) {

        $idUzytkownika=$rolaTab['idUzytkownika'];
        $rola=$rolaTab['rola'];

        $rolaTab = $this->findOneBy(array('idUzytkownika'=>$idUzytkownika));
        $rolaTab->setRola($rola);

        $this->getEntityManager()->persist($rolaTab);
        $this->getEntityManager()->flush();

        $sql = 'select * from daneUzytkownika';

        $daneUzytkownika =  $this->getEntityManager()->getConnection()->fetchAllAssociative($sql);

        return $daneUzytkownika;
    }
}




















